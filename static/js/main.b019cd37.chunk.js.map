{"version":3,"sources":["components/wrapper/services.js","components/wrapper/Sensortag.jsx","components/DataController.jsx","App.js","serviceWorker.js","index.js"],"names":["infaredTempService","name","uuid","data","notification","configuration","period","humidityService","barometerService","opticalService","movementService","Sensortag","state","connected","server","enableService","serviceObj","_this","getPrimaryService","then","service","getCharacteristic","characteristic","writeValue","Uint8Array","of","Uint16Array","console","log","concat","readCharacteristic","startNotifications","subscribeTo","characteristicId","callback","addEventListener","evt","value","target","subscribeToBarometerData","services","temp","getUint32","pressure","subscribeToHumidityData","getUint16","humidity","subscribeToInfaredData","objectTemp","ambientTemp","subscribeToOpticalData","m","e","lux","subscribeToMovementData","gyroX","getInt16","gyroY","gyroZ","accX","accY","accZ","magX","magY","magZ","connect","_callee","device","regenerator_default","a","wrap","_context","prev","next","navigator","bluetooth","requestDevice","filters","optionalServices","sent","gatt","setState","stop","this","_this2","React","Children","map","props","children","child","cloneElement","Component","DataController","barometer","react_default","createElement","Fragment","onClick","App","className","Sensortag_Sensortag","DataController_DataController","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b019cd37.chunk.js","sourcesContent":["const infaredTempService = {\n  name: \"infared\",\n  uuid: \"f000aa00-0451-4000-b000-000000000000\",\n  data: \"f000aa01-0451-4000-b000-000000000000\",\n  notification: \"00002902-0000-1000-8000-00805f9b34fb\",\n  configuration: \"f000aa02-0451-4000-b000-000000000000\",\n  period: \"f000aa03-0451-4000-b000-000000000000\"\n};\n\nconst humidityService = {\n  name: \"humidity\",\n  uuid: \"f000aa20-0451-4000-b000-000000000000\",\n  data: \"f000aa21-0451-4000-b000-000000000000\",\n  notification: \"00002902-0000-1000-8000-00805f9b34fb\",\n  configuration: \"f000aa22-0451-4000-b000-000000000000\",\n  period: \"f000aa23-0451-4000-b000-000000000000\"\n};\n\nconst barometerService = {\n  name: \"barometer\",\n  uuid: \"f000aa40-0451-4000-b000-000000000000\",\n  data: \"f000aa41-0451-4000-b000-000000000000\",\n  notification: \"00002902-0000-1000-8000-00805f9b34fb\",\n  configuration: \"f000aa42-0451-4000-b000-000000000000\",\n  period: \"f000aa44-0451-4000-b000-000000000000\"\n};\n\nconst opticalService = {\n  name: \"optical\",\n  uuid: \"f000aa70-0451-4000-b000-000000000000\",\n  data: \"f000aa71-0451-4000-b000-000000000000\",\n  notification: \"00002902-0000-1000-8000-00805f9b34fb\",\n  configuration: \"f000aa72-0451-4000-b000-000000000000\",\n  period: \"f000aa73-0451-4000-b000-000000000000\"\n};\n\nconst movementService = {\n  name: \"movement\",\n  uuid: \"f000aa80-0451-4000-b000-000000000000\",\n  data: \"f000aa81-0451-4000-b000-000000000000\",\n  notification: \"00002902-0000-1000-8000-00805f9b34fb\",\n  configuration: \"f000aa82-0451-4000-b000-000000000000\",\n  period: \"f000aa83-0451-4000-b000-000000000000\"\n};\n\nexport {\n  infaredTempService as infared,\n  humidityService as humidity,\n  barometerService as barometer,\n  opticalService as optical,\n  movementService as movement\n};\n","import React, { Component } from \"react\";\nimport * as services from \"./services\";\n\nexport default class Sensortag extends Component {\n  state = {\n    connected: false,\n    server: null\n  };\n\n  enableService = serviceObj =>\n    this.server\n      .getPrimaryService(serviceObj.uuid)\n      .then(service => service.getCharacteristic(serviceObj.configuration))\n      .then(characteristic =>\n        serviceObj.name !== \"movement\"\n          ? characteristic.writeValue(Uint8Array.of(1))\n          : characteristic.writeValue(Uint16Array.of(0x007f))\n      )\n      .then(() => console.log(`enabled ${serviceObj.name}`));\n\n  readCharacteristic = (serviceObj, characteristic) =>\n    this.server\n      .getPrimaryService(serviceObj.uuid)\n      .then(service => service.getCharacteristic(serviceObj[characteristic]))\n      .then(characteristic => characteristic.startNotifications());\n\n  subscribeTo = (serviceObj, characteristicId, callback) =>\n    this.readCharacteristic(serviceObj, characteristicId).then(\n      characteristic => {\n        characteristic.addEventListener(\"characteristicvaluechanged\", evt => {\n          var value = evt.target.value;\n\n          callback(value);\n        });\n      }\n    );\n\n  subscribeToBarometerData = callback =>\n    this.subscribeTo(services.barometer, \"data\", value =>\n      callback({\n        temp: (value.getUint32(0, true) & 0x00ffffff) / 100,\n        pressure: ((value.getUint32(2, true) >> 8) & 0x00ffffff) / 100\n      })\n    );\n\n  subscribeToHumidityData = callback =>\n    this.subscribeTo(services.humidity, \"data\", value =>\n      callback({\n        temp: (value.getUint16(0, true) / 65536) * 165 - 40,\n        humidity: ((value.getUint16(2, true) & ~0x0003) / 65536) * 100\n      })\n    );\n\n  subscribeToInfaredData = callback =>\n    this.subscribeTo(services.infared, \"data\", value =>\n      callback({\n        objectTemp: (value.getUint16(0, true) >> 2) * 0.03125,\n        ambientTemp: (value.getUint16(2, true) >> 2) * 0.03125\n      })\n    );\n\n  subscribeToOpticalData = callback =>\n    this.subscribeTo(services.optical, \"data\", value => {\n      var m = value.getUint16(0, true) & 0x0fff;\n      var e = (value.getUint16(0, true) & 0xf000) >> 12;\n\n      e = e === 0 ? 1 : 2 << (e - 1);\n\n      callback({\n        lux: m * (0.01 * e)\n      });\n    });\n\n  subscribeToMovementData = callback =>\n    this.subscribeTo(services.movement, \"data\", value =>\n      callback({\n        gyroX: value.getInt16(0, true) / (65536 / 500),\n        gyroY: value.getInt16(2, true) / (65536 / 500),\n        gyroZ: value.getInt16(4, true) / (65536 / 500),\n        accX: value.getInt16(6, true) / (65536 / 500),\n        accY: value.getInt16(8, true) / (65536 / 500),\n        accZ: value.getInt16(10, true) / (65536 / 500),\n        magX: (value.getInt16(12, true) * 4912.0) / 32768.0,\n        magY: (value.getInt16(14, true) * 4912.0) / 32768.0,\n        magZ: (value.getInt16(16, true) * 4912.0) / 32768.0\n      })\n    );\n\n  connect = async () => {\n    let device = await navigator.bluetooth.requestDevice({\n      filters: [\n        {\n          name: \"CC2650 SensorTag\"\n        }\n      ],\n      optionalServices: [\n        services.humidity.uuid,\n        services.barometer.uuid,\n        services.infared.uuid,\n        services.optical.uuid,\n        services.movement.uuid\n      ]\n    });\n\n    this.server = await device.gatt.connect();\n\n    await this.enableService(services.infared);\n    await this.enableService(services.barometer);\n    await this.enableService(services.humidity);\n    await this.enableService(services.optical);\n    await this.enableService(services.movement);\n\n    this.setState({ connected: true, server: this.server });\n  };\n\n  render() {\n    return React.Children.map(this.props.children, child =>\n      React.cloneElement(child, {\n        connect: this.connect,\n        enableService: this.enableService,\n        readCharacteristic: this.readCharacteristic,\n        server: this.state.server,\n        connected: this.state.connected,\n        subscribeToBarometerData: this.subscribeToBarometerData,\n        subscribeToHumidityData: this.subscribeToHumidityData,\n        subscribeToInfaredData: this.subscribeToInfaredData,\n        subscribeToMovementData: this.subscribeToMovementData,\n        subscribeToOpticalData: this.subscribeToOpticalData\n      })\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class DataController extends Component {\n  state = {\n    barometer: {\n      temp: 0,\n      pressure: 0\n    }\n  };\n  connect = () =>\n    this.props.connect().then(() => {\n      this.props.subscribeToBarometerData(barometer =>\n        this.setState({ barometer })\n      );\n    });\n\n  render() {\n    return (\n      <>\n        {!this.props.connected ? (\n          <button onClick={this.connect}>Connect!</button>\n        ) : (\n          <div>\n            temp: {this.state.barometer.temp}\n            <br />\n            pressure: {this.state.barometer.pressure}\n          </div>\n        )}\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Sensortag from \"./components/wrapper/Sensortag\";\nimport DataController from \"./components/DataController\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {};\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Sensortag>\n          <DataController />\n        </Sensortag>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}